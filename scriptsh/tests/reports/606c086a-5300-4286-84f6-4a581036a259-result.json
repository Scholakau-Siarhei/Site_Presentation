{"name": "Authorisation with valid data", "status": "broken", "statusDetails": {"message": "ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/LATEST_RELEASE_115.0.5790", "trace": "@pytest.fixture(scope='function')\n    def driver():\n        \"\"\" Фикстура driver() создает экземпляр объекта WebDriver\n            и устанавливает его настройки. Фикстура устанавливает режим\n            без графического интерфейса (--headless) и отключает использование\n            GPU (--disable-gpu). Фикстура также устанавливает низкий уровень\n            журналирования (--log-level=3) и исключает журналирование\n            (--excludeSwitches) от ChromeDriver. Затем фикстура создает\n            экземпляр объекта WebDriver с помощью ChromeDriverManager и\n            максимизирует окно браузера. Фикстура также устанавливает время\n            неявного ожидания на 10 секунд. После прохождения всех тестов\n            фикстура закрывает браузер\"\"\"\n    \n        options = Options()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument('log-level=3')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n>       driver = webdriver.Chrome(ChromeDriverManager().install())\n\n..\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\chrome.py:39: in install\n    driver_path = self._get_driver_path(self.driver)\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\core\\manager.py:30: in _get_driver_path\n    file = self._download_manager.download_file(driver.get_driver_download_url())\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\drivers\\chrome.py:40: in get_driver_download_url\n    driver_version_to_download = self.get_driver_version_to_download()\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\core\\driver.py:51: in get_driver_version_to_download\n    self._driver_to_download_version = self._version if self._version not in (None, \"latest\") else self.get_latest_release_version()\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\drivers\\chrome.py:62: in get_latest_release_version\n    resp = self._http_client.get(url=latest_release_url)\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\core\\http.py:37: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [404]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n>           raise ValueError(f\"There is no such driver by url {resp.url}\")\nE           ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/LATEST_RELEASE_115.0.5790\n\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\webdriver_manager\\core\\http.py:16: ValueError"}, "start": 1690235967876, "stop": 1690235967876, "uuid": "1a1a6a59-bdc4-482c-8ecf-e641d620115d", "historyId": "a707b9555172d26c5c1ec2d556e674f3", "testCaseId": "a707b9555172d26c5c1ec2d556e674f3", "fullName": "tests.test_login#test_login", "labels": [{"name": "suite", "value": "Authorisation"}, {"name": "tag", "value": "non_multiple_CPUs_run"}, {"name": "tag", "value": "my_work"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "XOY-ASUS-R7"}, {"name": "thread", "value": "4876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}