{"name": "Registration with valid data", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=114.0.5735.201)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0115A813+48355]\n\t(No symbol) [0x010EC4B1]\n\t(No symbol) [0x00FF5358]\n\t(No symbol) [0x00FDD293]\n\t(No symbol) [0x0103E37B]\n\t(No symbol) [0x0104C473]\n\t(No symbol) [0x0103A536]\n\t(No symbol) [0x010182DC]\n\t(No symbol) [0x010193DD]\n\tGetHandleVerifier [0x013BAABD+2539405]\n\tGetHandleVerifier [0x013FA78F+2800735]\n\tGetHandleVerifier [0x013F456C+2775612]\n\tGetHandleVerifier [0x011E51E0+616112]\n\t(No symbol) [0x010F5F8C]\n\t(No symbol) [0x010F2328]\n\t(No symbol) [0x010F240B]\n\t(No symbol) [0x010E4FF7]\n\tBaseThreadInitThunk [0x752F7BA9+25]\n\tRtlInitializeExceptionChain [0x7712BB9B+107]\n\tRtlClearBits [0x7712BB1F+191]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c00c04fc4101ac5dc555a6169d4bac2\")>\n\n    @pytest.mark.my_work\n    @pytest.mark.non_multiple_CPUs_run\n    @allure.suite(\"Registration\")\n    @allure.title(\"Registration with valid data\")\n    def test_sing_up(driver):\n        sing_up_page = SingUp(driver)\n        sing_up_page.open_site()\n>       sing_up_page.close_banner()\n\n..\\tests\\test_sing_up.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\pages\\sing_up_page.py:20: in close_banner\n    if self.find_element(locators_base_page.btn_close_banner):\n..\\pages\\base_page.py:34: in find_element\n    return self.driver.find_element(by_name, by_val)\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F63F471B10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...dInitThunk [0x752F7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7712BB9B+107]\\\\n\\\\tRtlClearBits [0x7712BB1F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=114.0.5735.201)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0115A813+48355]\nE       \t(No symbol) [0x010EC4B1]\nE       \t(No symbol) [0x00FF5358]\nE       \t(No symbol) [0x00FDD293]\nE       \t(No symbol) [0x0103E37B]\nE       \t(No symbol) [0x0104C473]\nE       \t(No symbol) [0x0103A536]\nE       \t(No symbol) [0x010182DC]\nE       \t(No symbol) [0x010193DD]\nE       \tGetHandleVerifier [0x013BAABD+2539405]\nE       \tGetHandleVerifier [0x013FA78F+2800735]\nE       \tGetHandleVerifier [0x013F456C+2775612]\nE       \tGetHandleVerifier [0x011E51E0+616112]\nE       \t(No symbol) [0x010F5F8C]\nE       \t(No symbol) [0x010F2328]\nE       \t(No symbol) [0x010F240B]\nE       \t(No symbol) [0x010E4FF7]\nE       \tBaseThreadInitThunk [0x752F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x7712BB9B+107]\nE       \tRtlClearBits [0x7712BB1F+191]\n\nC:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchWindowException"}, "steps": [{"name": "Go to general page", "status": "passed", "start": 1689786034893, "stop": 1689786035913}, {"name": "Close banner", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=114.0.5735.201)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0115A813+48355]\n\t(No symbol) [0x010EC4B1]\n\t(No symbol) [0x00FF5358]\n\t(No symbol) [0x00FDD293]\n\t(No symbol) [0x0103E37B]\n\t(No symbol) [0x0104C473]\n\t(No symbol) [0x0103A536]\n\t(No symbol) [0x010182DC]\n\t(No symbol) [0x010193DD]\n\tGetHandleVerifier [0x013BAABD+2539405]\n\tGetHandleVerifier [0x013FA78F+2800735]\n\tGetHandleVerifier [0x013F456C+2775612]\n\tGetHandleVerifier [0x011E51E0+616112]\n\t(No symbol) [0x010F5F8C]\n\t(No symbol) [0x010F2328]\n\t(No symbol) [0x010F240B]\n\t(No symbol) [0x010E4FF7]\n\tBaseThreadInitThunk [0x752F7BA9+25]\n\tRtlInitializeExceptionChain [0x7712BB9B+107]\n\tRtlClearBits [0x7712BB1F+191]\n\n", "trace": "  File \"X:\\Learn_QA\\PYTHON\\my_work\\pages\\sing_up_page.py\", line 20, in close_banner\n    if self.find_element(locators_base_page.btn_close_banner):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"X:\\Learn_QA\\PYTHON\\my_work\\pages\\base_page.py\", line 34, in find_element\n    return self.driver.find_element(by_name, by_val)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Sergey\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1689786035913, "stop": 1689786035914}], "start": 1689786034893, "stop": 1689786035916, "uuid": "c880e591-2007-4fd6-8fcc-6827de9abcbc", "historyId": "7cd4b0825ac9c903289f07efb5c52140", "testCaseId": "7cd4b0825ac9c903289f07efb5c52140", "fullName": "tests.test_sing_up#test_sing_up", "labels": [{"name": "suite", "value": "Registration"}, {"name": "tag", "value": "non_multiple_CPUs_run"}, {"name": "tag", "value": "my_work"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "XOY-ASUS-R7"}, {"name": "thread", "value": "6400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sing_up"}]}